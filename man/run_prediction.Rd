% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_prediction.R
\name{run_prediction}
\alias{run_prediction}
\title{Peptide Docking Prediction Function}
\usage{
run_prediction(
  x,
  docking_col = "X",
  seq_col = "Sequence",
  train_pc = 0.75,
  properties = "OHE",
  method = "Custom",
  n = NULL,
  to_pred = NULL,
  objective = "binary",
  metric = "auc",
  best_pc = 0.2,
  nround = 1000,
  early_stop = 50,
  seed = 1234,
  monte_carlo = 10
)
}
\arguments{
\item{x}{A dataframe containing the sequences and docking information}

\item{docking_col}{A string or integer indicating the column name or number in data frame 'x' for docking scores.}

\item{seq_col}{A string or integer indicating the column name or number in data frame 'x' for sequences.}

\item{train_pc}{A numeric value indicating the percentage of the data to be used for training in the LightGBM algorithm.}

\item{properties}{A string indicating the type of properties to be used (either 'QSAR' or 'OHE')}

\item{method}{A string indicating the prediction method (either 'All' for predicting a full library - all tetramers, all pentamers ... determined by n - or 'Custom' if 'to_pred' is given)}

\item{n}{An integer indicating the length of the sequences (tetramers = 4, pentamers = 5, and so on). All sequences must be the same length.}

\item{to_pred}{A dataframe or vector of sequences to be predicted. If a vector is provided the features will be extracted. If a data frame es provided it must contain the same features as the training data.}

\item{objective}{A string indicating the objective for LightGBM model ('binary', 'regression_l1', 'regression_l2' are accepted for now. Other ones are available if the raw lightgbm package is used)}

\item{metric}{A string indicating the evaluation metric for the LightGBM model (eg. 'auc', 'l1', 'l2')}

\item{best_pc}{A numeric value indicating the percentage of 'best-performers' groups for binary objective.}

\item{nround}{An integer indicating the maximum number of iterations for the LightGBM model}

\item{early_stop}{An integer indicating the number of rounds without improvement after which training will stop}

\item{seed}{An integer to set the seed for random processes for reproducibility}

\item{monte_carlo}{An integer indicating the number of times the prediction process is run.}
}
\value{
A list containing average prediction, all predictions, all models and predicted sequences
}
\description{
This function performs model training and prediction on a given set of peptide sequences.
It can deal with both binary classification and regression tasks, with support for both QSAR and OHE property types.
The function makes use of LightGBM for model training and prediction.
}
\examples{
# To use the function
# Generate random sequences of 4 letters
sequences <- unique(replicate(200, paste(sample(c("A", "C", "T", "G"), 4,
replace = TRUE), collapse = "")))
# Generate random docking scores
dockings <- rnorm(length(sequences), 0, 1)
df <- data.frame(
Sequence = sequences,
Docking = dockings)
# Predict a vector without features extracted
to_pred <- c("GTAC", "ACTG", "HFGL", "REST", "DYLN")
results <- run_prediction(x = df, docking_col = "Docking",
seq_col = "Sequence", train_pc = 0.75, properties = "QSAR", method = "Custom",
n = 4, to_pred = to_pred, objective = "regression_l1", metric = "l1",
best_pc = 0.2, nround = 100, early_stop = 5, seed = 1234, monte_carlo = 2)
}
